{% set version = "1.74.1" %}

package:
  name: rust-split
  version: {{ version }}

source:
  # Note! This source file specification is structured specifically to interact
  # well with the autotick bot. Importantly, the `patches:` block actually
  # applies to *all* of these inputs, not just the last one in the list, because
  # of the way that the YAML selector processing works.
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux and x86_64]
    sha256: d206888a2a9d55113940151ba16117ce2456d7de021bab18cfcb06dc48d3157c  # [linux and x86_64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-unknown-linux-gnu.tar.xz  # [aarch64]
    sha256: 88d0cd0407ca5bb73b5d72956d85e31e057657c7ec09a58ca634cf36bd5cf626  # [aarch64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-powerpc64le-unknown-linux-gnu.tar.gz  # [ppc64le]
    sha256: bb1c9f0ab1016a2817afe8f72c03f8f1787fe44d0f9999669e0c1957a08e6213  # [ppc64le]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-apple-darwin.tar.gz  # [osx and x86_64]
    sha256: 54e1ef01d73f6031fbee36bbecd9af4209eb682dea478696e8282ca64d5792e5  # [osx and x86_64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-apple-darwin.tar.gz  # [osx and arm64]
    sha256: af6a982cbed85807fb8e5c4ba85b8a76162b58945f4787e0a7dec32e901e8b3b  # [osx and arm64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [win64]
    sha256: 14b7646eedf3a627bab88e719aa5c1a1da25366a4658da3e23762d698a191df8  # [win64]
    patches:
      - 0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff
  # End of block of primary source files.
  - url: https://static.rust-lang.org/dist/rust-src-{{ version }}.tar.gz
    sha256: 24aeed06114252059b5ecb671bf20c762ae62a01673444782e5de68c53a0968a
    folder: rust-src
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios.tar.gz  # [(linux or win) and x86_64]
    sha256: 55a9b27037754ba2ce5a6046ae9b7098a5cd2e59baafbc88c62b6e36ffe6ddb3  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-apple-ios.tar.gz  # [(linux or win) and x86_64]
    sha256: 90052a42942c44bd703b3ab85abedb05c50388943be9bd710d08c1ed47224c43  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [(linux or win) and x86_64]
    sha256: 57164279b477ea779a5237d953d8ee4c0685baf1ea206848b08d1354ca44f149  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios-sim.tar.gz  # [(linux or win) and x86_64]
    sha256: 9d447673d9a129c238cffda5d88742ac18a52a141b19485324b86e9831734a77  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: df103570eb81097b2607276c07072ea5774cd37338f88e43bf29284a415ea67f  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-arm-linux-androideabi.tar.gz  # [(linux or win) and x86_64]
    sha256: e4c89e8b1c4bda526e5a634ffd1f960f6e18c87a7b799f1ab3f56116e07ac1dd  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-armv7-linux-androideabi.tar.gz  # [(linux or win) and x86_64]
    sha256: 75c75a7e667b2ec582d18b584438b284c0073094b891f893be5b32298f5b3c40  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-i686-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: 5d3950841fd58a6234423f9c070b7ca8e64e0901cfa8666e01ebdd29d78efd04  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: 05508c2f79f7436dc98f20c476c56430a0216003d608a41d061d3f2342f45338  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-unknown-unknown.tar.gz  # [(linux or win) and x86_64]
    sha256: 517e5a9955fcd932dd66a3f6669895d7fd3aa63b1e660bd7bfe996c9c55941b5  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]

build:
  number: 1

requirements:
  build:
    - posix  # [win]
  host:

outputs:
  - name: rust-std-{{ rust_arch }}
    build:
      noarch: generic
      binary_relocation: false
      missing_dso_whitelist:   # [linux]
        - /lib64/librt.so.1  # [linux]
        - /lib64/libdl.so.2  # [linux]
        - /lib64/libpthread.so.0  # [linux]
        - /lib64/libm.so.6  # [linux]
        - /lib64/libc.so.6  # [linux]
        - /lib64/ld-linux-x86-64.so.2  # [linux]
      merge_build_host: false
    requirements:
      build:
        - posix  # [win]
      host:
      run:
        # The directory structure of windows and unix is different.
        # We should not install the bundled rust-std-x86_64-pc-windows-msvc from this output on unix for example.
        - __unix  # [unix]
        - __win  # [win]
      run_constrained:
        # Having different versions of rust-std and rust is confusing.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    script: install-rust-std.sh  # [unix]
    script: install-rust-std.bat  # [win]
    test:
      commands:
        - test -d $PREFIX/lib/rustlib   # [unix]
        - if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1  # [win]
        - echo {{ rust_arch }}

  - name: rust
    script: install-rust.sh  # [unix]
    script: install-rust.bat  # [win]
    build:
      # the distributed binaries are already relocatable
      binary_relocation: false
      missing_dso_whitelist:   # [linux]
        - /lib64/librt.so.1  # [linux]
        - /lib64/libdl.so.2  # [linux]
        - /lib64/libpthread.so.0  # [linux]
        - /lib64/libm.so.6  # [linux]
        - /lib64/libc.so.6  # [linux]
        - /lib64/ld-linux-x86-64.so.2  # [linux]
        # Added as run deps: libgcc-ng (via compiler strong run_exports), zlib
        # - /lib64/libgcc_s.so.1  # [linux]
        # - /lib64/libz.so.1  # [linux]
    run_exports:
      strong_constrains:
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx and x86_64]
    requirements:
      build:
        - posix  # [win]
      host:
        - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
        - {{ compiler('c') }}  # [linux] -- rustc needs a toolchain to link executables
        # zlib is linked by **/lib/libLLVM-*-rust-*.so
        - zlib  # [linux]
      run:
        - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
        - gcc_impl_{{ target_platform }}  # [linux]
    test:
      requires:
        - posix  # [win]
      commands:
        - rustc --help
        - rustdoc --help
        - cargo --help
        - cargo --config registries.crates-io.protocol=\"sparse\" install --force xsv
        - echo {{ rust_arch }}
        - if exist %LIBRARY_PREFIX%\share\doc\rust\html\sysroot exit 1  # [win]
        - cargo install --force xsv

  - name: rust-src
    script: install-rust-src.sh  # [unix]
    script: install-rust-src.bat  # [win]
    build:
      skip: {{ rust_arch != "x86_64-unknown-linux-gnu" and rust_arch != "x86_64-pc-windows-msvc" }}
      noarch: generic
      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.
      string: unix_{{ PKG_BUILDNUM }}  # [unix]
      string: win_{{ PKG_BUILDNUM }}  # [win]
    requirements:
      build:
        - posix  # [win]
      run:
        - __win   # [win]
        - __unix  # [unix]
      run_constrained:
        # Having different versions of rust-src and rust is confusing.
        # `rust-src` is specific to the toolchain in `rustup`,
        # and we would like to keep that behavior.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    test:
      commands:
        - test -f "${PREFIX}"/lib/rustlib/src/rust/Cargo.lock  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/src/rust/Cargo.lock" exit 1  # [win]
        # Make sure that the outputs do not clobber with other rust components
        - test "$(ls "${PREFIX}"/lib/rustlib/)" = "$(printf "manifest-rust-src\nsrc")"  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src" exit 1  # [win]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/src" exit 1  # [win]


  - name: rust-std-{{ rust_std_extra }}
    script: install-rust-std-extra.sh  # [unix]
    script: install-rust-std-extra.bat  # [win]
    build:
      skip: {{ rust_arch != "x86_64-unknown-linux-gnu" and rust_arch != "x86_64-pc-windows-msvc" }}
      noarch: generic
      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.
      string: unix_{{ PKG_BUILDNUM }}  # [unix]
      string: win_{{ PKG_BUILDNUM }}  # [win]
    requirements:
      build:
        - posix  # [win]
      run:
        - __win   # [win]
        - __unix  # [unix]
      run_constrained:
        # Having different versions of rust-std and rust is confusing.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    test:
      commands:
        - test -d $PREFIX/lib/rustlib/{{ rust_std_extra }}  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/{{ rust_std_extra }}" exit 1  # [win]
        - test -f $PREFIX/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}" exit 1  # [win]
        # Make sure that the outputs do not clobber with other rust components
        - test -z "$(ls "${PREFIX}"/lib/rustlib/ | grep -v {{ rust_std_extra }})"  # [unix]
        - dir /b "%LIBRARY_PREFIX%" | findstr /v "{{ rust_std_extra }}" >nul || exit 1  # [win]
        - echo {{ rust_std_extra }}

about:
  home: https://www.rust-lang.org
  license: MIT
  license_file:
    - LICENSE-APACHE
    - LICENSE-MIT
  summary: |
    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.
    This package provides the compiler (rustc) and the documentation utilities rustdoc.
  dev_url: https://doc.rust-lang.org/std/
  doc_url: https://www.rust-lang.org/en-US/documentation.html

extra:
  recipe-maintainers:
    - timkpaine
    - xhochy
    - johanneskoester
    - abhi18av
    - pkgw
    - dlaehnemann
    - isuruf
    - mbargull
