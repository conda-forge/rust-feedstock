{% set version = "1.85.0" %}

package:
  name: rust-split
  version: {{ version }}

source:
  # Note! This source file specification is structured specifically to interact
  # well with the autotick bot. Importantly, the `patches:` block actually
  # applies to *all* of these inputs, not just the last one in the list, because
  # of the way that the YAML selector processing works.
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux and x86_64]
    sha256: be4ba7b777100c851ab268e95f70f405d28d7813ba60a9bdcf4e88c88acf8602  # [linux and x86_64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-unknown-linux-gnu.tar.xz  # [aarch64]
    sha256: 024918027c349bd237617a8a1207d7c4462f70549a31e8bf6c14b0601cfd489e  # [aarch64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-powerpc64le-unknown-linux-gnu.tar.gz  # [ppc64le]
    sha256: d0761bf0e1786a46dddfe60cc9397b899f680b86e6aebd7ca16b2a70a9dd631b  # [ppc64le]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-apple-darwin.tar.gz  # [osx and x86_64]
    sha256: 69a36d239e38cc08c6366d1d85071847406645346c6f2d2e0dfaf64b58050d3d  # [osx and x86_64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-apple-darwin.tar.gz  # [osx and arm64]
    sha256: 3ff45cefaf9a002069902acf3a6332113b76b530bb31803fe5cfd30f7ef8ba03  # [osx and arm64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [win64]
    sha256: 2d8c78d5130a87015f29c8584577d0a4b0da6331a7e90073d45d471c92127c27  # [win64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-pc-windows-msvc.tar.gz  # [win and arm64]
    sha256: 21d2b288d7f5c6de442de19d69894e997aeb4fa0b657f75a15c6fccd4eae149b  # [win and arm64]
    patches:
      - 0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff
  # End of block of primary source files.
  - url: https://static.rust-lang.org/dist/rust-src-{{ version }}.tar.gz
    sha256: 57d23cf2794645f5d2e3cea2e95e8408aece69921d817bf5064cab5f66b3cf0a
    folder: rust-src
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios.tar.gz  # [(linux or win) and x86_64]
    sha256: 67fa6b6dc997bf8c7d5fb7539e07fffc78851e32e111ad661605f96515074a83  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-apple-ios.tar.gz  # [(linux or win) and x86_64]
    sha256: 9a775d008d9fc4bfcda2d1a890f15a428c2f64442ade8e6044f181de46c890c0  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [(linux or win) and x86_64]
    sha256: afe8fbf37001f559cbddc7c786db50946d3f483f12a290115ee1ef8fff10a833  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios-sim.tar.gz  # [(linux or win) and x86_64]
    sha256: cfa34c84e88ea30204dc618f88cb08994072ac7a0408456472ce011da41eb555  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: e66eb451fa7169d26578f27096005a853d1de3cee3eeabed7ab944e2600585b6  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-arm-linux-androideabi.tar.gz  # [(linux or win) and x86_64]
    sha256: a60f53baea9bfb5064bc71ea120e0988766fea2d445c1d51da2ff26b8efc24ba  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-armv7-linux-androideabi.tar.gz  # [(linux or win) and x86_64]
    sha256: 76de193228c9277e2e88762da1c16c309f466e04007b1801be76453726122dc2  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-i686-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: 2953dbd7cdfc6873decf35e2c380b63fc816cde8c50b311431ae862b9d726ccb  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: 22fc8e48cf6fc74f6d0ab772ad58c3ba81f140a3780c17aa5f9e4f55bd4762b8  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-unknown-unknown.tar.gz  # [(linux or win) and x86_64]
    sha256: c1e19115a19b074d87d5652d959951b641ffa1512a9dee10964f0f7ee19cca3c  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-unknown-emscripten.tar.gz  # [(linux or win) and x86_64]
    sha256: 2ee5992e6b8118b9b112fce15c29294f276c07e7b977d9b17fc7bba6612eea5c  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-pc-windows-msvc.tar.xz  # [(linux or win) and x86_64]
    sha256: 7154bb45bdc399b20266e051adfb6d7f2aa3f6df684080ab8b27c03784f2647c  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]

build:
  number: 0

requirements:
  build:
    - posix  # [win]
  host:

outputs:
  - name: rust-std-{{ rust_arch }}
    build:
      noarch: generic
      binary_relocation: false
      missing_dso_whitelist:   # [linux]
        - /lib64/librt.so.1  # [linux]
        - /lib64/libdl.so.2  # [linux]
        - /lib64/libpthread.so.0  # [linux]
        - /lib64/libm.so.6  # [linux]
        - /lib64/libc.so.6  # [linux]
        - /lib64/ld-linux-x86-64.so.2  # [linux]
      merge_build_host: false
    requirements:
      build:
        - posix  # [win]
      host:
      run:
        # The directory structure of windows and unix is different.
        # We should not install the bundled rust-std-x86_64-pc-windows-msvc from this output on unix for example.
        - __unix  # [unix]
        - __win  # [win]
      run_constrained:
        # Having different versions of rust-std and rust is confusing.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    script: install-rust-std.sh  # [unix]
    script: install-rust-std.bat  # [win]
    test:
      commands:
        - test -d $PREFIX/lib/rustlib   # [unix]
        - if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1  # [win]
        - echo {{ rust_arch }}

  - name: rust
    script: install-rust.sh  # [unix]
    script: install-rust.bat  # [win]
    build:
      # the distributed binaries are already relocatable
      binary_relocation: false
      missing_dso_whitelist:   # [linux]
        - /lib64/librt.so.1  # [linux]
        - /lib64/libdl.so.2  # [linux]
        - /lib64/libpthread.so.0  # [linux]
        - /lib64/libm.so.6  # [linux]
        - /lib64/libc.so.6  # [linux]
        - /lib64/ld-linux-x86-64.so.2  # [linux]
        # Added as run deps: libgcc-ng (via compiler strong run_exports), zlib
        # - /lib64/libgcc_s.so.1  # [linux]
        # - /lib64/libz.so.1  # [linux]
      run_exports:   # [(osx and x86_64) or linux]
        strong_constrains:   # [(osx and x86_64) or linux]
          - __osx >={{ c_stdlib_version }}  # [osx and x86_64]
          - __glibc >={{ c_stdlib_version }}  # [linux]
    requirements:
      build:
        - posix  # [win]
      host:
        - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
        - {{ compiler('c') }}  # [linux] -- rustc needs a toolchain to link executables
        - {{ stdlib('c') }}  # [linux]
        # zlib is linked by **/lib/libLLVM-*-rust-*.so
        - zlib  # [linux]
      run:
        - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
        - gcc_impl_{{ target_platform }}  # [linux]
        - sysroot_{{ target_platform }} >={{ c_stdlib_version }}  # [linux]
    test:
      requires:
        - posix  # [win]
      commands:
        - rustc --help
        - rustdoc --help
        - cargo --help
        - cargo --config registries.crates-io.protocol=\"sparse\" install --force xsv
        - echo {{ rust_arch }}
        - if exist %LIBRARY_PREFIX%\share\doc\rust\html\sysroot exit 1  # [win]

  - name: rust-src
    script: install-rust-src.sh  # [unix]
    script: install-rust-src.bat  # [win]
    build:
      skip: {{ rust_arch != "x86_64-unknown-linux-gnu" and rust_arch != "x86_64-pc-windows-msvc" }}
      noarch: generic
      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.
      string: unix_{{ PKG_BUILDNUM }}  # [unix]
      string: win_{{ PKG_BUILDNUM }}  # [win]
    requirements:
      build:
        - posix  # [win]
      run:
        - __win   # [win]
        - __unix  # [unix]
      run_constrained:
        # Having different versions of rust-src and rust is confusing.
        # `rust-src` is specific to the toolchain in `rustup`,
        # and we would like to keep that behavior.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    test:
      commands:
        - test -f "${PREFIX}"/lib/rustlib/src/rust/library/Cargo.lock  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/src/rust/library/Cargo.lock" exit 1  # [win]
        # Make sure that the outputs do not clobber with other rust components
        - test "$(ls "${PREFIX}"/lib/rustlib/)" = "$(printf "manifest-rust-src\nsrc")"  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src" exit 1  # [win]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/src" exit 1  # [win]


  - name: rust-std-{{ rust_std_extra }}
    script: install-rust-std-extra.sh  # [unix]
    script: install-rust-std-extra.bat  # [win]
    build:
      skip: {{ rust_arch != "x86_64-unknown-linux-gnu" and rust_arch != "x86_64-pc-windows-msvc" }}
      noarch: generic
      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.
      string: unix_{{ PKG_BUILDNUM }}  # [unix]
      string: win_{{ PKG_BUILDNUM }}  # [win]
    requirements:
      build:
        - posix  # [win]
      run:
        - __win   # [win]
        - __unix  # [unix]
      run_constrained:
        # Having different versions of rust-std and rust is confusing.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    test:
      commands:
        - test -d $PREFIX/lib/rustlib/{{ rust_std_extra }}  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/{{ rust_std_extra }}" exit 1  # [win]
        - test -f $PREFIX/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}" exit 1  # [win]
        # Make sure that the outputs do not clobber with other rust components
        - test -z "$(ls "${PREFIX}"/lib/rustlib/ | grep -v {{ rust_std_extra }})"  # [unix]
        - dir /b "%LIBRARY_PREFIX%" | findstr /v "{{ rust_std_extra }}" >nul || exit 1  # [win]
        - echo {{ rust_std_extra }}

about:
  home: https://www.rust-lang.org
  license: MIT
  license_file:
    - LICENSE-APACHE
    - LICENSE-MIT
  summary: |
    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.
    This package provides the compiler (rustc) and the documentation utilities rustdoc.
  dev_url: https://doc.rust-lang.org/std/
  doc_url: https://www.rust-lang.org/en-US/documentation.html

extra:
  recipe-maintainers:
    - timkpaine
    - xhochy
    - johanneskoester
    - abhi18av
    - pkgw
    - dlaehnemann
    - isuruf
    - mbargull
